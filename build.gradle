buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}
buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "net.ltgt.gradle:gradle-apt-plugin:0.12"
  }
}

apply plugin: "net.ltgt.apt"
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1'
sourceCompatibility = 1.8



repositories {
	mavenCentral()
	maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}
configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web-services:1.4.0.RELEASE')
	compile('org.springframework.cloud:spring-cloud-starter-eureka-server:1.3.4.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.postgresql:postgresql:9.4-1200-jdbc41')
	compile('org.mapstruct:mapstruct-jdk8:1.2.0.CR1')
	apt('org.mapstruct:mapstruct-processor:1.2.0.CR1')
	testCompile 'org.testng:testng:6.10', 'org.easytesting:fest-assert:1.4'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile("junit:junit")
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}

test {
    useTestNG()
}
